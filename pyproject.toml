[tool.poetry]
name = "fathomnet"
version = "1.1.2"
description = "fathomnet-py is a client-side API to help scientists, researchers, and developers interact with FathomNet data."
license = "MIT"
authors = ["Kevin Barnard <kbarnard@mbari.org>"]
maintainers = ["Kevin Barnard <kbarnard@mbari.org>"]
readme = "README.md"
homepage = "https://github.com/fathomnet/fathomnet-py"
repository = "https://github.com/fathomnet/fathomnet-py"
documentation = "https://fathomnet-py.readthedocs.io"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]

[tool.poetry.dependencies]
python = "^3.8.1"
dataclasses-json = "^0.5.4"
requests = "^2.20.0"
lxml = "^4.6.0"
coco-lib = "^0.1.2"
progressbar2 = "^3.37.0"
appdirs = {version = "^1.4.4", optional = true}
torch = {version = "^2.0.1", optional = true}
opencv-python = {version = "^4.7.0", optional = true}
pandas = {version = "^2.0.3", optional = true}
pillow = {version = "^10.0.0", optional = true}
psutil = {version = "^5.9.5", optional = true}
torchvision = {version = "^0.15.2", optional = true}
pyyaml = {version = "^6.0.1", optional = true}
tqdm = {version = "^4.65.0", optional = true}
ultralytics = {version = "^8.0.146", optional = true}
gitpython = {version = "^3.1.32", optional = true}

[tool.poetry.dev-dependencies]

[tool.poetry.extras]
models = ["appdirs", "torch", "opencv-python", "pandas", "pillow", "psutil", "torchvision", "pyyaml", "tqdm", "ultralytics", "gitpython"]

[tool.poetry.scripts]
fathomnet-generate = 'fathomnet.scripts.fathomnet_generate:main'

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/fathomnet/fathomnet-py/issues"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.1.0"
pytest = "^7.4.0"

[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
version_toml = [
    "pyproject.toml:tool.poetry.version",
]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"